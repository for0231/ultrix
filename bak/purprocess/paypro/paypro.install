<?php

/**
 * @file
 * Install, update and uninstall function for the paypro module.
 */

use Drupal\Core\Field\BaseFieldDefinition;

/**
 * 增加支付记录字段.
 *
 * Function paypro_update_9005() {
 * $storage_definition = BaseFieldDefinition::create('entity_reference')
 * ->setLabel(t('支付记录'))
 * ->setDescription(t('支付记录'))
 * ->setSetting('target_type', 'pcord')
 * ->setCardinality(-1);
 *
 * \Drupal::entityDefinitionUpdateManager()
 * ->installFieldStorageDefinition('pcnos', 'paypro', 'paypro', $storage_definition);
 * }
 */

/**
 * 删除支付记录字段.
 *
 * @todo 后期完善后删除paypro里面fname, fbank, faccount, fbserial
 *
 * function paypro_update_9004() {
 * $storage_definition = \Drupal::entityDefinitionUpdateManager()
 * ->getFieldStorageDefinition('pcnos', 'paypro');
 *
 * \Drupal::entityDefinitionUpdateManager()
 * ->uninstallFieldStorageDefinition($storage_definition);
 * }
 */

/**
 * 增加支付单名称.
 */
function paypro_update_9006() {
  $storage_definition = BaseFieldDefinition::create('string')
    ->setLabel(t('支付单名称'))
    ->setDescription(t('支付单名称'));

  \Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('title', 'paypro', 'paypro', $storage_definition);
}

/**
 * 增加支付单金额.
 */
function paypro_update_9007() {
  $storage_definition = BaseFieldDefinition::create('integer')
    ->setLabel(t('支付单金额'))
    ->setDefaultValue(0)
    ->setDescription(t('支付单金额'));

  \Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('amount', 'paypro', 'paypro', $storage_definition);
}

/**
 * 增加支付单备注.
 */
function paypro_update_9011() {
  $storage_definition = BaseFieldDefinition::create('text_long')
    ->setLabel(t('备注'))
    ->setDescription(t('备注'));

  \Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('description', 'paypro', 'paypro', $storage_definition);
}

/**
 * 增加单是否取消字段.
 * 默认为0，表示未取消
 *       1，表示已取消
 * 用途：用来区分支付单取消时，付款单回归付款池后，付款单正常与否，默认为0时-正常状态。
 * 1时非正常状态。.
 */
function paypro_update_9012() {
  $storage_definition = BaseFieldDefinition::create('integer')
    ->setLabel(t('是否取消'))
    ->setDefaultValue(0)
    ->setDescription(t('是否取消.'));

  \Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('iscancel', 'paypro', 'paypro', $storage_definition);
}

/**
 * @description 添加汇率字段.
 *
 * function paypro_update_9013() {
 * $storage_definition = BaseFieldDefinition::create('integer')
 * ->setLabel(t('汇率'))
 * ->setDefaultValue(1)
 * ->setDescription(t('汇率.'));
 *
 * \Drupal::entityDefinitionUpdateManager()
 * ->installFieldStorageDefinition('rate', 'paypro', 'paypro', $storage_definition);
 * }
 */
/**
 * @description 删除汇率字段.
 *
 * function paypro_update_9014() {
 * $storage_definition = \Drupal::entityDefinitionUpdateManager()
 * ->getFieldStorageDefinition('rate', 'paypro');
 *
 * \Drupal::entityDefinitionUpdateManager()
 * ->uninstallFieldStorageDefinition($storage_definition);
 * }
 */

/**
 * @description 金额字段，精确到float类型
 */
function paypro_update_9015() {
  // Create the definition for the field.
  $new_field = [
    'type' => 'float',
    'precision' => 10,
    'scale' => 2,
  ];

  db_change_field('paypro', 'amount', 'amount', $new_field);
}
