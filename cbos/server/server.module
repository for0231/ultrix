<?php

/**
 * @file
 * Contains server.module.
 */

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function server_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the server module.
    case 'help.page.server':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The servers.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function server_theme() {
  $theme = [];
  $theme['server'] = [
    'render element' => 'elements',
    'file' => 'server.page.inc',
    'template' => 'server',
  ];
  $theme['server_content_add_list'] = [
    'render element' => 'content',
    'variables' => ['content' => NULL],
    'file' => 'server.page.inc',
  ];
  return $theme;
}

/**
* Implements hook_theme_suggestions_HOOK().
*/
function server_theme_suggestions_server(array $variables) {
  $suggestions = [];
  $entity = $variables['elements']['#server'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'server__' . $sanitized_view_mode;
  $suggestions[] = 'server__' . $entity->bundle();
  $suggestions[] = 'server__' . $entity->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'server__' . $entity->id();
  $suggestions[] = 'server__' . $entity->id() . '__' . $sanitized_view_mode;
  return $suggestions;
}

/**
 * Implements hook_entity_base_field_info().
 */
function server_entity_base_field_info(EntityTypeInterface $entity_type) {
  if ($entity_type->id() == 'product') {
    $fields = [];

    $fields['server'] = BaseFieldDefinition::create('entity_reference')
      ->setLabel(t('Server'))
      ->setRequired(TRUE)
      ->setSetting('target_type', 'server')
      ->setDisplayOptions('view', [
        'type' => 'entity_reference_table',
        'weight' => -4,
      ])
      ->setDisplayOptions('form', [
        'type' => 'entity_reference_autocomplete',
        'weight' => -4,
      ])
      ->setDisplayConfigurable('form', TRUE)
      ->setDisplayConfigurable('view', TRUE);

    return $fields;
  }
}